/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "bitStreamAddFsm.v:1" *)
module bitStreamAddFsm(Y, A, B, clk);
  (* src = "bitStreamAddFsm.v:19" *)
  wire _000_;
  (* src = "bitStreamAddFsm.v:19" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  (* src = "bitStreamAddFsm.v:3" *)
  input A;
  (* src = "bitStreamAddFsm.v:4" *)
  input B;
  (* src = "bitStreamAddFsm.v:2" *)
  output Y;
  (* src = "bitStreamAddFsm.v:8" *)
  wire carry;
  (* src = "bitStreamAddFsm.v:5" *)
  input clk;
  (* onehot = 32'd1 *)
  wire [3:0] current_state;
  NOT _048_ (
    .A(current_state[3]),
    .Y(_006_)
  );
  NOT _049_ (
    .A(current_state[2]),
    .Y(_007_)
  );
  NOT _050_ (
    .A(current_state[1]),
    .Y(_008_)
  );
  NOT _051_ (
    .A(Y),
    .Y(_009_)
  );
  NAND _052_ (
    .A(A),
    .B(B),
    .Y(_010_)
  );
  NOT _053_ (
    .A(_010_),
    .Y(_011_)
  );
  NAND _054_ (
    .A(carry),
    .B(_010_),
    .Y(_012_)
  );
  NOT _055_ (
    .A(_012_),
    .Y(_013_)
  );
  NAND _056_ (
    .A(carry),
    .B(current_state[1]),
    .Y(_014_)
  );
  NOT _057_ (
    .A(_014_),
    .Y(_015_)
  );
  NOR _058_ (
    .A(current_state[3]),
    .B(_015_),
    .Y(_016_)
  );
  NOR _059_ (
    .A(_013_),
    .B(_016_),
    .Y(_005_)
  );
  NOR _060_ (
    .A(current_state[0]),
    .B(current_state[2]),
    .Y(_017_)
  );
  NOT _061_ (
    .A(_017_),
    .Y(_018_)
  );
  NOR _062_ (
    .A(_010_),
    .B(_017_),
    .Y(_019_)
  );
  NOR _063_ (
    .A(current_state[1]),
    .B(_019_),
    .Y(_020_)
  );
  NOR _064_ (
    .A(carry),
    .B(_020_),
    .Y(_021_)
  );
  NOT _065_ (
    .A(_021_),
    .Y(_022_)
  );
  NOR _066_ (
    .A(current_state[3]),
    .B(current_state[1]),
    .Y(_023_)
  );
  NAND _067_ (
    .A(_006_),
    .B(_008_),
    .Y(_024_)
  );
  NOR _068_ (
    .A(A),
    .B(B),
    .Y(_025_)
  );
  NOR _069_ (
    .A(_012_),
    .B(_025_),
    .Y(_026_)
  );
  NAND _070_ (
    .A(_024_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _071_ (
    .A(_022_),
    .B(_027_),
    .Y(_003_)
  );
  NOR _072_ (
    .A(carry),
    .B(_025_),
    .Y(_028_)
  );
  NOR _073_ (
    .A(carry),
    .B(_007_),
    .Y(_029_)
  );
  NOR _074_ (
    .A(current_state[0]),
    .B(_029_),
    .Y(_030_)
  );
  NOR _075_ (
    .A(_028_),
    .B(_030_),
    .Y(_002_)
  );
  NOR _076_ (
    .A(carry),
    .B(_017_),
    .Y(_031_)
  );
  NOR _077_ (
    .A(_011_),
    .B(_025_),
    .Y(_032_)
  );
  NAND _078_ (
    .A(_031_),
    .B(_032_),
    .Y(_033_)
  );
  NAND _079_ (
    .A(_024_),
    .B(_025_),
    .Y(_034_)
  );
  NAND _080_ (
    .A(_007_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _081_ (
    .A(carry),
    .B(_035_),
    .Y(_036_)
  );
  NAND _082_ (
    .A(_033_),
    .B(_036_),
    .Y(_004_)
  );
  NOR _083_ (
    .A(_018_),
    .B(_034_),
    .Y(_037_)
  );
  NOR _084_ (
    .A(carry),
    .B(_019_),
    .Y(_038_)
  );
  NOR _085_ (
    .A(_037_),
    .B(_038_),
    .Y(_001_)
  );
  NOR _086_ (
    .A(carry),
    .B(Y),
    .Y(_039_)
  );
  NOT _087_ (
    .A(_039_),
    .Y(_040_)
  );
  NAND _088_ (
    .A(_017_),
    .B(_024_),
    .Y(_041_)
  );
  NOR _089_ (
    .A(_009_),
    .B(_031_),
    .Y(_042_)
  );
  NAND _090_ (
    .A(_041_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _091_ (
    .A(_023_),
    .B(_026_),
    .Y(_044_)
  );
  NOT _092_ (
    .A(_044_),
    .Y(_045_)
  );
  NAND _093_ (
    .A(_043_),
    .B(_045_),
    .Y(_046_)
  );
  NAND _094_ (
    .A(_040_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _095_ (
    .A(_033_),
    .B(_047_),
    .Y(_000_)
  );
  DFF _096_ (
    .C(clk),
    .D(_002_),
    .Q(current_state[0])
  );
  DFF _097_ (
    .C(clk),
    .D(_003_),
    .Q(current_state[1])
  );
  DFF _098_ (
    .C(clk),
    .D(_004_),
    .Q(current_state[2])
  );
  DFF _099_ (
    .C(clk),
    .D(_005_),
    .Q(current_state[3])
  );
  (* src = "bitStreamAddFsm.v:19" *)
  DFF _100_ (
    .C(clk),
    .D(_000_),
    .Q(Y)
  );
  (* src = "bitStreamAddFsm.v:19" *)
  DFF _101_ (
    .C(clk),
    .D(_001_),
    .Q(carry)
  );
endmodule
